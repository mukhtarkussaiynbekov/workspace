syntax = "proto3";

package todo.todoapp.v1beta1;
option go_package = "github.com/mukhtarkv/workspace/api/todo/todoapp/v1beta1;todoappv1beta1";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/field_mask.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ToDo App";
    version: "1.0";
  };
  host: "todoapp.example.org";
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

// ToDoApp is an example of API definition.
service ToDoApp {

  // List todos.
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/todos"
    };
  }

  // Create a todo.
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/todos"
      body: "*"
    };
  }

  // Update a todo.
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put: "/todos/{id}"
      body: "*"
    };
  }

  // Delete todo.
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/todos/{id}"
    };
  }

}

message ListRequest {}
message ListResponse{
    message ToDoItem {
        // ID of the item
        string id = 1;
        // Title of the item
        string title = 2;
        // Details of the item
        string details = 3;
    }
    // List of ToDo items
    repeated ToDoItem todo_items = 1;
}

message CreateRequest{
    string title = 1;
    string details = 2;
}

message CreateResponse{
    string id = 1;
    string title = 2;
    string details = 3;
}

message UpdateRequest{
    message ToDoItem {
        string title = 1;
        string details = 2;
    }
    // ID of the todo item resource to update.
    string id = 1;

    // A ToDo item containing the updated resource.
    ToDoItem item = 2;

    // Standard field mask for the set of fields to be updated.
    google.protobuf.FieldMask update_mask = 3;
}

message UpdateResponse{}

message DeleteRequest {
    // ID of the todo item
  string id = 1 [(validate.rules).string.min_len = 4];
}

message DeleteResponse {}
